import{_ as a}from"./20023-08-07-01-6c9dd1ab.js";import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as d,a as e,b as r,e as i,d as l,f as c}from"./app-2a551ad3.js";const u="/assets/20023-08-07-02-6bcb0e68.png",h={},p={id:"asp-net-core-6-自訂路由格式",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#asp-net-core-6-自訂路由格式","aria-hidden":"true"},"#",-1),v={href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),r(" 前言")],-1),_=e("p",null,[r("本文說明如何設定 API 的網址大小寫，"),e("br"),r(" 雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。"),e("br"),r(" 不過如果有不喜歡大駝峰的命名規則有兩種做法")],-1),g=e("ul",null,[e("li",null,"在屬性路由或路由表手動命名，"),e("li",null,"透過選項調整路由命名的規則。")],-1),f=e("p",null,"本文將透過更改選項的方式來設定路由規則。",-1),x=c('<h2 id="路由慣例" tabindex="-1"><a class="header-anchor" href="#路由慣例" aria-hidden="true">#</a> 路由慣例</h2><p>在 .NET 的預設慣例路由規則是 Controller 的名字。<br> 基於大駝峰的命名慣例會像這樣。</p><figure><img src="'+a+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="自訂路由" tabindex="-1"><a class="header-anchor" href="#自訂路由" aria-hidden="true">#</a> 自訂路由</h2><p>建立一個 Web API 的專案範本直接作為範例，<br> 將路由選項依賴注入至應用程式即可。</p><p>在 <code>Program.cs</code> 內參考並加入下方片段</p><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// 以下兩種寫法都可以
// 更新 AddRouting 的設定
builder.Services.AddRouting(options =&gt; options.LowercaseUrls = true);
// 直接使用 builder.Services.Configure&lt;RouteOptions&gt; 進行設定 RouteOptions
builder.Services.Configure&lt;RouteOptions&gt;(options =&gt; options.LowercaseUrls = true);

var app = builder.Build();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結果展示" tabindex="-1"><a class="header-anchor" href="#結果展示" aria-hidden="true">#</a> 結果展示</h2><p>可以看到 Swagger API 文件上的網址變成小寫了</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="後記" tabindex="-1"><a class="header-anchor" href="#後記" aria-hidden="true">#</a> 後記</h2><p>有時候覺得微軟官方的 MSDN 文件真的是需要一些悟性才會讀得懂......</p><h1 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料" aria-hidden="true">#</a> 參考資料</h1>',13),A={href:"https://learn.microsoft.com/zh-tw/aspnet/core/fundamentals/routing?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},S=e("br",null,null,-1),C={href:"https://learn.microsoft.com/zh-tw/aspnet/core/mvc/controllers/routing?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},w=e("br",null,null,-1),E={href:"https://learn.microsoft.com/zh-tw/dotnet/api/microsoft.aspnetcore.routing.routeoptions?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"};function N(k,P){const n=o("ExternalLinkIcon");return s(),d("div",null,[e("h1",p,[b,r(),e("a",v,[r("ASP.NET"),i(n)]),r(" Core 6 自訂路由格式")]),m,_,g,f,l(" more "),x,e("p",null,[e("a",A,[r("ASP.NET Core 中的路由"),i(n)]),S,e("a",C,[r("ASP.NET Core 中的路由至控制器動作"),i(n)]),w,e("a",E,[r("RouteOptions 類別"),i(n)])])])}const T=t(h,[["render",N],["__file","index.html.vue"]]);export{T as default};
