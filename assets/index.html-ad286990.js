import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c,a as e,b as n,e as s,f as i}from"./app-dd45151f.js";const l={},t=i(`<h1 id="在-ubuntu-上安裝-docker" tabindex="-1"><a class="header-anchor" href="#在-ubuntu-上安裝-docker" aria-hidden="true">#</a> 在 Ubuntu 上安裝 Docker</h1><h2 id="先決條件" tabindex="-1"><a class="header-anchor" href="#先決條件" aria-hidden="true">#</a> 先決條件</h2><h3 id="作業系統需求" tabindex="-1"><a class="header-anchor" href="#作業系統需求" aria-hidden="true">#</a> 作業系統需求</h3><p>要安裝 Docker，以下 Ubuntu 版本之一的 64 位版本：</p><ul><li>Ubuntu Kinetic 22.10</li><li>Ubuntu Jammy 22.04 (LTS)</li><li>Ubuntu Focal 20.04 (LTS)</li><li>Ubuntu Bionic 18.04 (LTS)</li></ul><p>Docker Engine 可兼容 <code>x86_64</code>、<code>amd64</code>、<code>armhf</code>、<code>arm64</code>、<code>s390x</code> 架構</p><h3 id="移除過舊版本" tabindex="-1"><a class="header-anchor" href="#移除過舊版本" aria-hidden="true">#</a> 移除過舊版本</h3><p>舊版本的 Docker 以 <code>docker</code>、<code>docker.io</code> 或 <code>docker-engine</code> 的名稱命名。 在嘗試安裝新版本之前必須移除舊版本：</p><h2 id="透過-docker-的官方-apt-儲存庫安裝" tabindex="-1"><a class="header-anchor" href="#透過-docker-的官方-apt-儲存庫安裝" aria-hidden="true">#</a> 透過 docker 的官方 <code>apt</code> 儲存庫安裝</h2><h3 id="設定儲存庫" tabindex="-1"><a class="header-anchor" href="#設定儲存庫" aria-hidden="true">#</a> 設定儲存庫</h3><ul><li>1.更新 apt 包索引並安裝包以允許 apt 通過 HTTPS 使用存儲庫：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ca-certificates <span class="token function">curl</span> gnupg lsb-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2.加入 Docker’s 官方 GPG key</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/apt/keyrings
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /etc/apt/keyrings/docker.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3.使用以下命令設定存儲庫：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token punctuation">\\</span>
  <span class="token string">&quot;deb [arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\
  <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安裝-docker-engine-containerd-docker-compose" tabindex="-1"><a class="header-anchor" href="#安裝-docker-engine-containerd-docker-compose" aria-hidden="true">#</a> 安裝 Docker Engine, containerd, Docker Compose</h3><ul><li>1.更新 apt 索引</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>2.安裝最新版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>3.通過運行 hello-world 鏡像驗證 Docker Engine 安裝是否成功：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="讓-docker-可以不需要以-superuser-權限執行" tabindex="-1"><a class="header-anchor" href="#讓-docker-可以不需要以-superuser-權限執行" aria-hidden="true">#</a> 讓 Docker 可以不需要以 SuperUser 權限執行</h2><h3 id="新增群組名稱-docker" tabindex="-1"><a class="header-anchor" href="#新增群組名稱-docker" aria-hidden="true">#</a> 新增群組名稱  <code>docker</code></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="新增使用者到-docker-群組" tabindex="-1"><a class="header-anchor" href="#新增使用者到-docker-群組" aria-hidden="true">#</a> 新增使用者到  <code>docker</code>  群組</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="登出並重新登入使成員身分刷新-或執行命令來啟用變更" tabindex="-1"><a class="header-anchor" href="#登出並重新登入使成員身分刷新-或執行命令來啟用變更" aria-hidden="true">#</a> 登出並重新登入使成員身分刷新，或執行命令來啟用變更</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>newgrp <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="驗證是否可在不使用-sudo-來執行-docker指令" tabindex="-1"><a class="header-anchor" href="#驗證是否可在不使用-sudo-來執行-docker指令" aria-hidden="true">#</a> 驗證是否可在不使用 <code>sudo</code> 來執行 <code>docker</code>指令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料" aria-hidden="true">#</a> 參考資料</h1>`,33),u={href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"},p=e("br",null,null,-1),h={href:"https://larrylu.blog/using-volumn-to-persist-data-in-container-a3640cc92ce4",target:"_blank",rel:"noopener noreferrer"},k=e("br",null,null,-1),b={href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user",target:"_blank",rel:"noopener noreferrer"};function v(m,g){const a=o("ExternalLinkIcon");return r(),c("div",null,[t,e("p",null,[e("a",u,[n("Docker 安裝教學"),s(a)]),p,e("a",h,[n("Docker 實戰系列（三）：使用 Volume 保存容器內的數據"),s(a)]),k,e("a",b,[n("Manage Docker as a non-root user"),s(a)])])])}const _=d(l,[["render",v],["__file","index.html.vue"]]);export{_ as default};
