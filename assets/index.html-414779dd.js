import{_ as t}from"./20023-08-07-01-6c9dd1ab.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as n,b as s,e,d as r,f as l}from"./app-6bf82179.js";const u="/assets/20023-08-07-02-6bcb0e68.png",d={},k={id:"asp-net-core-6-自訂路由格式",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#asp-net-core-6-自訂路由格式","aria-hidden":"true"},"#",-1),m={href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},b=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),v=n("p",null,[s("本文說明如何設定 API 的網址大小寫，"),n("br"),s(" 雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。"),n("br"),s(" 不過如果有不喜歡大駝峰的命名規則有兩種做法")],-1),_=n("ul",null,[n("li",null,"在屬性路由或路由表手動命名，"),n("li",null,"透過選項調整路由命名的規則。")],-1),f=n("p",null,"本文將透過更改選項的方式來設定路由規則。",-1),g=l('<h2 id="路由慣例" tabindex="-1"><a class="header-anchor" href="#路由慣例" aria-hidden="true">#</a> 路由慣例</h2><p>在 .NET 的預設慣例路由規則是 Controller 的名字。<br> 基於大駝峰的命名慣例會像這樣。</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="自訂路由" tabindex="-1"><a class="header-anchor" href="#自訂路由" aria-hidden="true">#</a> 自訂路由</h2><p>建立一個 Web API 的專案範本直接作為範例，<br> 將路由選項依賴注入至應用程式即可。</p><p>在 <code>Program.cs</code> 內參考並加入下方片段</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add services to the container.</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 以下兩種寫法都可以</span>
<span class="token comment">// 更新 AddRouting 的設定</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddRouting</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> options<span class="token punctuation">.</span>LowercaseUrls <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 直接使用 builder.Services.Configure&lt;RouteOptions&gt; 進行設定 RouteOptions</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>RouteOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> options<span class="token punctuation">.</span>LowercaseUrls <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結果展示" tabindex="-1"><a class="header-anchor" href="#結果展示" aria-hidden="true">#</a> 結果展示</h2><p>可以看到 Swagger API 文件上的網址變成小寫了</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="後記" tabindex="-1"><a class="header-anchor" href="#後記" aria-hidden="true">#</a> 後記</h2><p>有時候覺得微軟官方的 MSDN 文件真的是需要一些悟性才會讀得懂......</p><h1 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料" aria-hidden="true">#</a> 參考資料</h1>',13),x={href:"https://learn.microsoft.com/zh-tw/aspnet/core/fundamentals/routing?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},A=n("br",null,null,-1),S={href:"https://learn.microsoft.com/zh-tw/aspnet/core/mvc/controllers/routing?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"},w=n("br",null,null,-1),E={href:"https://learn.microsoft.com/zh-tw/dotnet/api/microsoft.aspnetcore.routing.routeoptions?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer"};function N(C,P){const a=p("ExternalLinkIcon");return c(),i("div",null,[n("h1",k,[h,s(),n("a",m,[s("ASP.NET"),e(a)]),s(" Core 6 自訂路由格式")]),b,v,_,f,r(" more "),g,n("p",null,[n("a",x,[s("ASP.NET Core 中的路由"),e(a)]),A,n("a",S,[s("ASP.NET Core 中的路由至控制器動作"),e(a)]),w,n("a",E,[s("RouteOptions 類別"),e(a)])])])}const T=o(d,[["render",N],["__file","index.html.vue"]]);export{T as default};
