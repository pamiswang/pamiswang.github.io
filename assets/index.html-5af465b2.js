import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as l,c as i,d as u,a as s,b as n,e as a,w as k,f as p}from"./app-6383ee68.js";const r="/assets/meme-01-2fbcd155.webp",d="/assets/2024-02-25-01-a58402a0.gif",v={},m=p('<h1 id="用主控台撰寫鍵盤腳本" tabindex="-1"><a class="header-anchor" href="#用主控台撰寫鍵盤腳本" aria-hidden="true">#</a> 用主控台撰寫鍵盤腳本</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>最近玩一些動作遊戲發現歲月真是不饒人，<br> 手變殘了反應也變慢了。</p><p>為了血壓健康千萬要慎選遊戲。</p><figure><img src="'+r+'" alt="宮崎英高的疝液" tabindex="0" loading="lazy"><figcaption style="font-size:1rem;">宮崎英高的疝液</figcaption></figure><p>尤其像是格鬥遊戲這種要尻技能表的玩法，<br> 有沒有方法不用一直操作就能打出好棒棒的連段呢？</p><p>沒錯就是按鍵精靈登場的時候囉！<br> 本著沒事找事不務正業的精神，<br> 本次就是要自己來實作簡單的自動放招。</p>',7),b=p('<h2 id="專案目標" tabindex="-1"><a class="header-anchor" href="#專案目標" aria-hidden="true">#</a> 專案目標</h2><p>本次目標為開發一個 <code>ASP.NET Framework 4.8</code> 主控台專案，<br> 監聽鍵盤的訊號，當按下對應的按鍵會執行對應的指令。</p><p>會使用 <code>ASP.NET Framework</code> 而非 <code>ASP.NET Core</code>，<br> 原因是部分功能會用到 <code>System.Windows.Forms</code> 這個命名空間，<br> 加上遊戲多半都是在 Windows 平台執行，就不用堅持跨平台了。</p><h2 id="知識儲備" tabindex="-1"><a class="header-anchor" href="#知識儲備" aria-hidden="true">#</a> 知識儲備</h2><p>由於對遊戲搞外掛破解是有風險的，<br> 像是東半球最強法務部，<br> 所以網路上的教學資源比較少。</p><p>加上每款遊戲會因為執行平台或遊戲引擎差異，<br> 比較沒有固定的破解手法。</p><p>以下是本專案比較重要的知識點</p><h3 id="hook" tabindex="-1"><a class="header-anchor" href="#hook" aria-hidden="true">#</a> Hook</h3><p>Hook 白話翻譯就是鉤子，<br> 把預定要發送的消息給「鉤」到別處，<br> 也就是攔截消息。</p><p>以遊戲操作這件事情為例：</p><ol><li>玩家按下前進的按鍵</li><li>鍵盤發送硬體訊號給作業系統</li><li>作業系統將訊息轉送到鍵盤驅動</li><li>鍵盤驅動轉換成作業系統能識別的訊號</li><li>作業系統判斷這個訊號要送進哪個程式</li><li>作業系統將消息傳給遊戲程式</li><li>遊戲程式的人物執行前進的動作</li></ol><p>而按鍵精靈的原理就是攔截特定消息後執行預定好的腳本。</p>',12),w={href:"https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-setwindowshookexa",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>HHOOK <span class="token function">SetWindowsHookExA</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> <span class="token keyword">int</span>       idHook<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> HOOKPROC  lpfn<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> HINSTANCE hmod<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> DWORD     dwThreadId
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>idHook 參數就是決定要攔截的類型</p><p>通常比較常用的就是</p><ul><li>WH_KEYBOARD 2</li><li>WH_KEYBOARD_LL 13</li><li>WH_MOUSE 7</li><li>WH_MOUSE_LL 13<br> LL 是 Low Level 的縮寫<br> 代表能攔截到更底層的事件</li></ul><h3 id="模擬訊號輸入" tabindex="-1"><a class="header-anchor" href="#模擬訊號輸入" aria-hidden="true">#</a> 模擬訊號輸入</h3><p>要對遊戲下指令，就要模擬鍵盤的訊號，<br> 由於 <code>keybd_event</code> 比起其他 <code>SendMessage</code>、<code>PostMessage</code> 等函式更為底層，<br> 因為是直接模擬硬體訊號，成功率會比較高。</p>`,6),y={href:"https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-keybd_event",target:"_blank",rel:"noopener noreferrer"},f=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">keybd_event</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> BYTE      bVk<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> BYTE      bScan<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> DWORD     dwFlags<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> ULONG_PTR dwExtraInfo
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bVk 是鍵盤虛擬碼<br> System.Windows.Forms 的 Keys 列舉可以直接用</p>`,2),_=s("br",null,null,-1),E=s("br",null,null,-1),g=p(`<p>dwFlags 比較常用的是</p><ul><li>KEYEVENTF_KEYDOWN 0x0000 按下</li><li>KEYEVENTF_KEYUP 0x0002 放開</li></ul><p>由於有些遊戲對於按鍵的接收判定各有不同<br> 所以會需要多嘗試，例如可以用 <code>Thread.Sleep()</code> 創造時間差</p><h2 id="完整程式範例" tabindex="-1"><a class="header-anchor" href="#完整程式範例" aria-hidden="true">#</a> 完整程式範例</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HookScript</span>
<span class="token punctuation">{</span>
    <span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WH_KEYBOARD_LL <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> WM_KEYDOWN <span class="token operator">=</span> <span class="token number">0x0100</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> KEYEVENTF_KEYDOWN <span class="token operator">=</span> <span class="token number">0x0000</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> KEYEVENTF_KEYUP <span class="token operator">=</span> <span class="token number">0x0002</span><span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">IntPtr</span> _hookId <span class="token operator">=</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">LowLevelKeyboardProc</span> _proc <span class="token operator">=</span> HookCallback<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">delegate</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">LowLevelKeyboardProc</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> nCode<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> wParam<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token preprocessor property">#<span class="token directive keyword">region</span> WinAPI</span>
        <span class="token punctuation">[</span><span class="token function">DllImport</span><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;keybd_event&quot;</span><span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">keybd_event</span><span class="token punctuation">(</span><span class="token class-name">Keys</span> bVk<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> bScan<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> dwFlags<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> dwExtraInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetWindowsHookEx</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> idHook<span class="token punctuation">,</span> <span class="token class-name">LowLevelKeyboardProc</span> lpfn<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> hMod<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> dwThreadId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token target keyword">return</span><span class="token punctuation">:</span> <span class="token class-name">MarshalAs</span><span class="token attribute-arguments"><span class="token punctuation">(</span>UnmanagedType<span class="token punctuation">.</span>Bool<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">UnhookWindowsHookEx</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hhk<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">CallNextHookEx</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hhk<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> nCode<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> wParam<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;kernel32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">,</span> SetLastError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetModuleHandle</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> lpModuleName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 設定 hook</span>
            _hookId <span class="token operator">=</span> <span class="token function">SetHook</span><span class="token punctuation">(</span>_proc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;按下 F7 執行操作，按下 F9 離開應用&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 保持程式持續執行</span>
            Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetHook</span><span class="token punctuation">(</span><span class="token class-name">LowLevelKeyboardProc</span> proc<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> curProcess <span class="token operator">=</span> System<span class="token punctuation">.</span>Diagnostics<span class="token punctuation">.</span>Process<span class="token punctuation">.</span><span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> curModule <span class="token operator">=</span> curProcess<span class="token punctuation">.</span>MainModule<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">SetWindowsHookEx</span><span class="token punctuation">(</span>WH_KEYBOARD_LL<span class="token punctuation">,</span> proc<span class="token punctuation">,</span> <span class="token function">GetModuleHandle</span><span class="token punctuation">(</span>curModule<span class="token punctuation">.</span>ModuleName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">HookCallback</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> nCode<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> wParam<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> lParam<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nCode <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> wParam <span class="token operator">==</span> <span class="token punctuation">(</span>IntPtr<span class="token punctuation">)</span>WM_KEYDOWN<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">int</span></span> vkCode <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">ReadInt32</span><span class="token punctuation">(</span>lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Keys<span class="token punctuation">)</span>vkCode <span class="token operator">==</span> Keys<span class="token punctuation">.</span>F7<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;F7已按下。執行操作&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 下</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;按下[下]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>S<span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> KEYEVENTF_KEYDOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;放開[下]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>S<span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> KEYEVENTF_KEYUP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 下</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;按下[下]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>S<span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> KEYEVENTF_KEYDOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;放開[下]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>S<span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> KEYEVENTF_KEYUP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 必殺</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;按下[必殺技]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>I<span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> KEYEVENTF_KEYDOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;放開[必殺技]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">keybd_event</span><span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>I<span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> KEYEVENTF_KEYUP<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Keys<span class="token punctuation">)</span>vkCode <span class="token operator">==</span> Keys<span class="token punctuation">.</span>F9<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// 取消 hook 並關閉程式</span>
                    <span class="token function">UnhookWindowsHookEx</span><span class="token punctuation">(</span>_hookId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token function">CallNextHookEx</span><span class="token punctuation">(</span>_hookId<span class="token punctuation">,</span> nCode<span class="token punctuation">,</span> wParam<span class="token punctuation">,</span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="成果展示" tabindex="-1"><a class="header-anchor" href="#成果展示" aria-hidden="true">#</a> 成果展示</h2><figure><img src="`+d+'" alt="心情就跟佩可拉一樣開心" tabindex="0" loading="lazy"><figcaption style="font-size:1rem;">心情就跟佩可拉一樣開心</figcaption></figure><h2 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料" aria-hidden="true">#</a> 參考資料</h2>',8),x={href:"https://learn.microsoft.com/zh-tw/windows/win32/inputdev/virtual-key-codes",target:"_blank",rel:"noopener noreferrer"},S=s("br",null,null,-1),P={href:"https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-keybd_event",target:"_blank",rel:"noopener noreferrer"},K=s("br",null,null,-1),I={href:"https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-setwindowshookexa",target:"_blank",rel:"noopener noreferrer"};function L(W,C){const t=e("ExternalLinkIcon"),o=e("RouterLink");return l(),i("div",null,[m,u(" more "),b,s("p",null,[n("根據官方文件 "),s("a",w,[n("SetWindowsHookExA 函式 (winuser.h)"),a(t)]),n(" 會看到語法如下")]),h,s("p",null,[n("根據官方文件 "),s("a",y,[n("keybd_event 函式 (winuser.h)"),a(t)]),n(" 會看到語法如下")]),f,s("p",null,[n("bScan 是鍵盤掃描碼"),_,n(" 這是根據不同的硬體來決定"),E,n(" 詳細可以看這篇 "),a(o,{to:"/posts/2024-02-25-keyboard-scan-code/"},{default:k(()=>[n("淺談鍵盤掃描碼")]),_:1})]),g,s("p",null,[s("a",x,[n("虛擬按鍵代碼"),a(t)]),S,s("a",P,[n("keybd_event 函式 (winuser.h)"),a(t)]),K,s("a",I,[n("SetWindowsHookExA 函式 (winuser.h)"),a(t)])])])}const T=c(v,[["render",L],["__file","index.html.vue"]]);export{T as default};
